{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/akshartakle/Desktop/gql-boiler/minimal/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"/Users/akshartakle/Desktop/gql-boiler/minimal/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akshartakle/Desktop/gql-boiler/minimal/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akshartakle/Desktop/gql-boiler/minimal/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akshartakle/Desktop/gql-boiler/minimal/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akshartakle/Desktop/gql-boiler/minimal/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akshartakle/Desktop/gql-boiler/minimal/src/components/App.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query HelloQuery($name: String) {\\n    hello(name: $name)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { Query } from 'react-apollo';\nimport logo from \"../logo.svg\";\nimport '../styles/App.css';\nimport InputName from './InputName';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(Query, {\n        query: HELLO_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, function (props) {\n        console.log(props);\n        var data = props.data,\n            loading = props.loading,\n            error = props.error,\n            refetch = props.refetch;\n\n        if (loading) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \"Loading\");\n        }\n\n        if (error) {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, \"An unexpected error occurred\");\n        }\n\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, \"What's your name?\"), React.createElement(InputName, {\n          onSubmit: function onSubmit(name) {\n            refetch({\n              name: name\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, data.hello));\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar HELLO_QUERY = gql(_templateObject());\nexport default App;","map":{"version":3,"sources":["/Users/akshartakle/Desktop/gql-boiler/minimal/src/components/App.js"],"names":["React","Component","gql","Query","InputName","App","logo","HELLO_QUERY","props","console","log","data","loading","error","refetch","name","hello"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,OAAO,mBAAP;AACA,OAAOC,SAAP,MAAsB,aAAtB;;IAEMC,G;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,UAAAC,KAAK,EAAI;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADQ,YAEAG,IAFA,GAEkCH,KAFlC,CAEAG,IAFA;AAAA,YAEMC,OAFN,GAEkCJ,KAFlC,CAEMI,OAFN;AAAA,YAEeC,KAFf,GAEkCL,KAFlC,CAEeK,KAFf;AAAA,YAEsBC,OAFtB,GAEkCN,KAFlC,CAEsBM,OAFtB;;AAGR,YAAIF,OAAJ,EAAa;AACX,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACD;;AAED,YAAIC,KAAJ,EAAW;AACT,iBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAAP;AACD;;AAED,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE,oBAAC,SAAD;AACE,UAAA,QAAQ,EAAE,kBAAAE,IAAI,EAAI;AAChBD,YAAAA,OAAO,CAAC;AACNC,cAAAA,IAAI,EAAJA;AADM,aAAD,CAAP;AAGD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKJ,IAAI,CAACK,KAAV,CATF,CADF;AAaD,OAzBH,CAFF,CADF,CADF;AAkCD;;;;EApCef,S;;AAuClB,IAAMM,WAAW,GAAGL,GAAH,mBAAjB;AAMA,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport { gql } from 'apollo-boost'\nimport { Query } from 'react-apollo'\nimport logo from '../logo.svg'\nimport '../styles/App.css'\nimport InputName from './InputName'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Query query={HELLO_QUERY}>\n            {props => {\n              console.log(props)\n              const { data, loading, error, refetch } = props\n              if (loading) {\n                return <div>Loading</div>\n              }\n\n              if (error) {\n                return <div>An unexpected error occurred</div>\n              }\n\n              return (\n                <div>\n                  <p>What's your name?</p>\n                  <InputName\n                    onSubmit={name => {\n                      refetch({\n                        name,\n                      })\n                    }}\n                  />\n                  <h3>{data.hello}</h3>\n                </div>\n              )\n            }}\n          </Query>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst HELLO_QUERY = gql`\n  query HelloQuery($name: String) {\n    hello(name: $name)\n  }\n`\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}