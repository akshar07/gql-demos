{"ast":null,"code":"var _jsxFileName = \"/Users/akshartakle/Desktop/gql-boiler/minimal/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/styles/index.css';\nimport App from '../src/components/App';\nimport { ApolloProvider } from 'react-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { getMainDefinition } from 'apollo-utilities';\nvar wsLink = new WebSocketLink({\n  uri: \"ws://localhost:4000/\",\n  options: {\n    reconnect: true\n  }\n}); // Create an http link:\n\nvar httpLink = new HttpLink({\n  uri: 'http://localhost:4000/graphql'\n});\nvar link = split( // split based on operation type\nfunction (_ref) {\n  var query = _ref.query;\n  var definition = getMainDefinition(query);\n  return definition.kind === 'OperationDefinition' && definition.operation === 'subscription';\n}, wsLink, httpLink);\nvar client = new ApolloClient({\n  uri: 'http://localhost:4000'\n}); //Apollo Client\n\nReactDOM.render(React.createElement(ApolloProvider, {\n  client: client,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/akshartakle/Desktop/gql-boiler/minimal/src/index.js"],"names":["React","ReactDOM","App","ApolloProvider","ApolloClient","WebSocketLink","split","HttpLink","getMainDefinition","wsLink","uri","options","reconnect","httpLink","link","query","definition","kind","operation","client","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,yBAAP;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,YAAP,MAAyB,cAAzB;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,IAAMC,MAAM,GAAG,IAAIJ,aAAJ,CAAkB;AAC/BK,EAAAA,GAAG,wBAD4B;AAE/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE;AADJ;AAFsB,CAAlB,CAAf,C,CAOA;;AACA,IAAMC,QAAQ,GAAG,IAAIN,QAAJ,CAAa;AAC5BG,EAAAA,GAAG,EAAE;AADuB,CAAb,CAAjB;AAMA,IAAMI,IAAI,GAAGR,KAAK,EAChB;AACA,gBAAe;AAAA,MAAZS,KAAY,QAAZA,KAAY;AACb,MAAMC,UAAU,GAAGR,iBAAiB,CAACO,KAAD,CAApC;AACA,SACEC,UAAU,CAACC,IAAX,KAAoB,qBAApB,IACAD,UAAU,CAACE,SAAX,KAAyB,cAF3B;AAID,CARe,EAShBT,MATgB,EAUhBI,QAVgB,CAAlB;AAaA,IAAMM,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC9BM,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf,C,CAIA;;AACAT,QAAQ,CAACmB,MAAT,CACE,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '../src/styles/index.css'\nimport App from '../src/components/App'\nimport { ApolloProvider } from 'react-apollo'\nimport ApolloClient from 'apollo-boost'\n\nimport { WebSocketLink } from 'apollo-link-ws';\nimport { split } from 'apollo-link';\nimport { HttpLink } from 'apollo-link-http';\nimport { getMainDefinition } from 'apollo-utilities';\n\nconst wsLink = new WebSocketLink({\n  uri: `ws://localhost:4000/`,\n  options: {\n    reconnect: true\n  }\n});\n\n// Create an http link:\nconst httpLink = new HttpLink({\n  uri: 'http://localhost:4000/graphql'\n});\n\n\n\nconst link = split(\n  // split based on operation type\n  ({ query }) => {\n    const definition = getMainDefinition(query);\n    return (\n      definition.kind === 'OperationDefinition' &&\n      definition.operation === 'subscription'\n    );\n  },\n  wsLink,\n  httpLink,\n);\n\nconst client = new ApolloClient({\n  uri: 'http://localhost:4000',\n})\n\n//Apollo Client\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'),\n)"]},"metadata":{},"sourceType":"module"}